server.port=8080

#오라클 Database

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe
spring.datasource.username=gatchi
spring.datasource.password=gaja

spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=oracle




#MongoDB
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=gatchi
# spring.data.mongodb.username=gatchi
# spring.data.mongodb.password=rkcl6wh

# MongoDB 자동 인덱스 생성 설정 (선택 사항)
spring.data.mongodb.auto-index-creation=true

# MongoDB 로그 출력 설정 (선택 사항)
#logging.level.org.springframework.data.mongodb.core=DEBUG

spring.websocket.max-text-message-size=1024000
spring.websocket.max-binary-message-size=1024000

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
logging.level.org.hibernate=info
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always





#Google
spring.security.oauth2.client.registration.google.client-id=637782420612-d8c70act257tutvqrb04qumekjqehqlh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
#email , profile get


#kakao
spring.security.oauth2.client.registration.kakao.client-id=7dacaee3265df62fb327785a2f90b097
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method: POST
spring.security.oauth2.client.registration.kakao.authorization-grant-type: authorization_code
spring.security.oauth2.client.registration.kakao.scope: profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

#kakao Provider, 카카오에서 만들어 놓은것, 수정 ㄴ
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


#naver
spring.security.oauth2.client.registration.naver.client-id=8HSyPxHf7eTk2akbJ62f
spring.security.oauth2.client.registration.naver.client-secret=3Af8rYFm5Y
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type: authorization_code
spring.security.oauth2.client.registration.naver.scope: name,profile_image,email
spring.security.oauth2.client.registration.naver.client-name=Naver

#naver Provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
