<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 여기있는 sql을 호출할 인터페이스 패키지 위치를 정확하게 입력해야 사용이 가능하다. -->
<mapper namespace="com.spring.boot.mapper.GatchiMapper">

<insert id="createGatchi" parameterType="com.spring.boot.dto.GatchiDTO">
    insert into gatchi(
	meetListNum,meetCheck,meetCtgNum,meetName,
    meetTitle,meetContent,meetImage,meetDate,meetDday,
    meetMemCnt,meetMaxMemCnt,meetHitCount,meetLikeCount,
    meetHow,meetEntryfee,meetMoney,meetPlace, meetStatus) values (
	#{meetListNum},#{meetCheck},#{meetCtgNum},#{meetName},
	#{meetTitle},#{meetContent},#{meetImage},sysdate,#{meetDday},
    1,#{meetMaxMemCnt},0,0,
	#{meetHow},#{meetEntryfee},#{meetMoney},#{meetPlace},1)
</insert>

<select id="maxNum" resultType="int">
	select nvl(max(meetListNum),0) from gatchi
</select>

<select id="getReadData" parameterType="int" resultType="com.spring.boot.dto.GatchiDTO">
	select * from gatchi 
	where meetListNum=#{meetListNum}
</select>

<select id="getMeetMateLists" resultType="com.spring.boot.dto.GatchiDTO">
	select * from gatchi where meetCheck = 1
</select>

<select id="getCommuniFindLists" resultType="com.spring.boot.dto.GatchiDTO">
	select * from gatchi where meetCheck = 2
</select>

<select id="getMeetMateRandomList" parameterType="int" 
	resultType="com.spring.boot.dto.GatchiDTO">
<![CDATA[
	SELECT * FROM (
    	SELECT * FROM gatchi WHERE meetCheck = 1 ORDER BY DBMS_RANDOM.VALUE
	) WHERE ROWNUM <= ${count}
]]>
</select>

<select id="getCommuniFindRandomList" parameterType="int" 
	resultType="com.spring.boot.dto.GatchiDTO">
<![CDATA[
	SELECT * FROM (
    	SELECT * FROM gatchi WHERE meetCheck = 2 ORDER BY DBMS_RANDOM.VALUE
	) WHERE ROWNUM <= ${count}
]]>
</select>

<select id="getRownumList" parameterType="int" resultType="com.spring.boot.dto.GatchiDTO">
	select * from
	<![CDATA[
	(select ROWNUM rnum, data.* from (
	select * from GATCHI
	where MEETTITLE like '%%') data)
	where rnum >= 1 and rnum <= #{end}
	]]>
</select>


<select id="searchMeetMateList" parameterType="map" resultType="com.spring.boot.dto.GatchiDTO">
    SELECT * FROM gatchi
    WHERE 

	(
        (#{searchKey} = 'meetTitle' AND meetTitle LIKE '%' || #{searchValue} || '%')
        OR
        (#{searchKey} = 'meetDday' AND meetDday LIKE '%' || #{searchValue} || '%')
        OR
        (#{searchKey} = 'meetPlace' AND meetPlace LIKE '%' || #{searchValue} || '%')
    )
</select>

<update id="plusMeetCount" parameterType="int">
	update gatchi set meetlikecount = meetlikecount + 1
	where meetListNum = #{meetListNum}
</update>

<update id="minusMeetCount" parameterType="int">
	update gatchi set meetlikecount = meetlikecount - 1
	where meetListNum = #{meetListNum} and
	<![CDATA[
	(select MEETLIKECOUNT from gatchi where meetListNum = #{meetListNum}) > 0
	]]>
</update>

<select id="getReadDataInUser" parameterType="String" resultType="com.spring.boot.dto.GatchiDTO">
	select * from gatchi
	where MEETLISTNUM = (select MEETLISTNUM from gatchiLike where useremail = #{useremail})
</select>

<select id="getReadDataInListNum" parameterType="int" resultType="com.spring.boot.dto.GatchiDTO">
	select * from GATCHI
	where meetListNum = #{meetListNum}
</select>

<update id="updateChatRoom" parameterType="com.spring.boot.dto.GatchiDTO">
	update gatchi set chatRoomNum = #{chatRoomNum} where meetListNum = #{meetListNum}
</update>

</mapper>